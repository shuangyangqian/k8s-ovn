---
- name: Docker network setup | Remove current default nat network
  win_shell: |
    Get-HNSNetwork | Remove-HNSNetwork

- name: Docker network setup | Create docker config
  win_lineinfile:
    path: C:\ProgramData\docker\config\daemon.json
    create: yes
    line: |
      { "bridge" : "none" }
    newline: unix

# Launch and do not wait for result, connection will drop
- name: Docker network setup | Create transparent network
  win_shell: |
    $mtu = (Get-NetIPInterface -InterfaceAlias "{{interface_name}}" -AddressFamily IPv4).NlMtu
    docker network create -d transparent --gateway {{OVN_GATEWAY_IP}} --subnet {{OVN_SUBNET}} -o com.docker.network.windowsshim.interface="{{ interface_name }}" {{ docker_info.docker_network_name }}
    Set-NetIPInterface -InterfaceAlias "vEthernet ({{interface_name}})" -NlMtuBytes $mtu
  async: 10
  poll: 0

# Wait for docker to create the HNS Network and the new adapter. Connection will
# drop shortly when doing this, wait for the connection to come back
- name: Docker network setup | Wait for system to become reachable over WinRM
  wait_for_connection:
    # The connection should come back usually after a few seconds
    delay: 5
    timeout: 60
