---
- name: Restart Kubelet
  win_service:
    name: kubelet
    start_mode: auto
    state: restarted

- name: Kubernetes minion | Remove Startup-script if exists
  win_file:
    path: C:\startup.ps1
    state: absent

- name: Kubernetes minion | Update C:\Windows\System32\drivers\etc\hosts
  win_lineinfile:
    path: C:\Windows\System32\drivers\etc\hosts
    line: "{{ host_public_ip }} {{ ansible_hostname|lower }}"

- name: Kubernetes minion | Add "{{ install_info.install_path }}" to path
  win_path:
    elements: "{{ install_info.install_path }}"

- name: Kubernetes minion | check if ovn-kubernetes-node is installed
  win_service:
    name: ovn-kubernetes-node
  register: ovnkube_service

- name: Kubernetes minion | Remove ovn-kubernetes-node service if it exists
  block:
    - name: Kubernetes minion | Stop ovn-kubernetes-node service
      win_service:
        name: ovn-kubernetes-node
        state: stopped
      changed_when: false

    - name: Kubernetes minion | Remove ovn-kubernetes-node service
      win_service:
        name: ovn-kubernetes-node
        state: absent
      changed_when: false
  when: ovnkube_service.exists

- name: Kubelet | Create ovn-kubernetes-node service
  win_service:
    name: ovn-kubernetes-node
    path: '"{{ install_info.install_path }}\\servicewrapper.exe" ovn-kubernetes-node {{ install_info.install_path }}\\ovnkube.exe --k8s-kubeconfig={{ install_info.install_path }}\\kubeconfig.yaml --k8s-apiserver http://{{ kubernetes_info.MASTER_IP }}:8080 --init-node {{ ansible_hostname|lower }} --k8s-token {{TOKEN}} --nb-address "tcp://{{ kubernetes_info.MASTER_IP }}:6641" --sb-address "tcp://{{ kubernetes_info.MASTER_IP }}:6642" --cluster-subnet {{ kubernetes_info.CLUSTER_SUBNET }} --cni-conf-dir="{{ install_info.install_path }}/cni" --cni-plugin "ovn-k8s-cni-overlay.exe" --encap-ip="{{host_internal_ip}}"'
    display_name: OVN Kubernetes Node
    description: OVN Kubernetes Node CNI Server
    username: LocalSystem
    password: ""
  changed_when: false

# TODO: add firewall rules instead of disabling it
- name: Kubernetes minion | Create startup-script
  win_lineinfile:
    path: C:\startup.ps1
    create: yes
    line: |
      $RegROPath = "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run"
      Remove-ItemProperty $RegROPath "OVN_Init_Node" -ErrorAction SilentlyContinue
      Start-Service ovn-kubernetes-node
      netsh firewall set opmode disable
    newline: unix

- name: Kubernetes minion | Make minion-init startup script Run
  win_shell: |
    $RegPath = "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon"
    # HKCU to run after the user logs in
    $RegROPath = "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run"

    $script = "C:\WINDOWS\system32\WindowsPowerShell\v1.0\powershell.exe -noexit C:\startup.ps1"

    Set-ItemProperty $RegPath "AutoAdminLogon" -Value "1" -type String  
    Set-ItemProperty $RegPath "DefaultUsername" -Value "{{ host_info.username }}" -type String  
    Set-ItemProperty $RegPath "DefaultPassword" -Value "{{ host_info.password }}" -type String
    Set-ItemProperty $RegPath "AutoLogonCount" -Value "1" -type DWord
    Set-ItemProperty $RegROPath "OVN_Init_Node" -Value "$script" -type String

- name: Kubernetes minion | Reboot
  win_reboot:

- name: Kubernetes minion | Wait for minion-init script to finish
  win_shell: ping {{OVN_GATEWAY_IP}} -n 1
  changed_when: false
  register: ovngateway_ping
  until: ovngateway_ping.rc == 0
  retries: 30
  delay: 3
